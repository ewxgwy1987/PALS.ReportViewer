<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAUAICAQAAEABADoAgAAVgAAABAQEAABAAQAKAEAAD4DAAAwMAAAAQAIAKgOAABmBAAAICAAAAEA
        CACoCAAADhMAABAQAAABAAgAaAUAALYbAAAoAAAAIAAAAEAAAAABAAQAAAAAAIACAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/AAAA//8A/wAAAP8A
        /wD//wAA////ABERERERERERERERERERERERERERERERERERERERERERERERERERAAERERERERERERER
        ERERAHiAARERERERERERERERAHd4iIABERERERERERERAHd3gAiIgAERERERERERAHd3iHiACIiAARER
        ERERAHd3iHh4iIAIiIABEREREHd3iHd4eIiIgAiIgAERERh3iHd3eHiIiIiACIiAEREYiHd3d3h4iIiI
        iIAIgBERiHh3d3d4eIiIiIiIgAAREY94d3d3ePiIiIiIiIiAARGPeHd3d/iHeIiIiIiIiAARj3h3d/93
        eId4iIiIiIgIAY94d/93d3d4h3iIiIiIB4CPeP93eZd4h3iHeIiIiAeIj/iHeqd4h3d3CId4iIgIEYj3
        eId4h3d3APcIh3iIARERiPd4iId3AP//B3iHeAERERGI93iIAP/8z3CHeIEREREREYj3eI/8z//wiIER
        ERERERERiPd4///M9wERERERERERERGI+P/M//9wEREREREREREREYiP//zP9wERERERERERERERj/zP
        //9wERERERERERERERj///zP9wARERERERERERERj/zP//+IERERERERERERERj///+IERERERERERER
        ERERj/+IERERERERERERERERERiIERERERERERERERERERERERERERER////////////8f///8B///8A
        H//8AAf/8AAB/8AAAH+AAAAfgAAAD4AAAA8AAAAPAAAABwAAAAMAAAABAAAAAAAAAAAAAAADAAAAB8AA
        AAfwAAAf/AAAf/8AAf//wAD///AAf//8AD///gAP//8AD///gD///8D////j//////8oAAAAEAAAACAA
        AAABAAQAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAICAAIAAAACAAIAAgIAAAMDA
        wACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////ABEREQABEREREREAeIABERERAHeACIABERB3
        iHiACIABGIh3eIiACAGId3d4iIiAAY93d/iIiIiAj3f/d3iIiICP/3eZd3iIgI93qnd4gHiAGI93eI/w
        cAERGI+P//8BERERGI////ARERERGP///wARERERj/+IEREREREYiBER/H93iPAfeIjABwiIgAEREYAB
        iHcAAXiIAACACAAAEREAAHd3AAB4iIABiIDgBxER+AN3d/4AeIj/A4iI/48RESgAAAAwAAAAYAAAAAEA
        CAAAAAAAgAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmWZmAJZmZgCXaGgAn29vAJRnZwCPaWkAkWtrAI1o
        aADMmZkAuYyMAL+SkgCTcHAAw5aWALGIiACmgIAAs4yMAJBxcQCXd3cAkXR0AJZ5eQChg4MAmX19AGxZ
        WQCmiooAmX9/AJyCggCVfHwAZlZWAH9sbACIdXUAkn9/AJ+MjADSu7sAp5WVAK+iogC0qKgAtqqqAP/y
        8gC5s7MA//n5AJt0cwCsgoEAzLKxAKZ3dACmeHYAond1ALOLiQCmdXEAxpuXAObY1wDfzMoA7OLhAP+m
        mQD/vLMA/8e/AP/p5gDy6+oA/6yfAP/TzACzgngAuY2EAL+XjwDGopoA2cG7AOzg3QC5iXsA0rSsAObT
        zAD/tpkA/7eaAP+7nwD/ybMA0q6fAP+8nQDSn4kAzJ+LAP/XxgD/4dIA+PTyAP/AnwD/xKIA7NfMAP/v
        5gDs1ccA5r2hAObErgD/yaAA/8ulAPLYxQD/+/gA/8aZAP/InQD/zaYA/8+nAP/RqgD51rYA/9euAP/X
        sAD/2LIA/9q1AP/duwD/4MEA/+jSAP/r1wD/7t0A//HjAP/58wD/48YA/+bMAP/06AD/9+4AZv+ZAFai
        bwBIb1UAUnheAGV4awBZzIAAa3VvAP///wD9/f0A+vr6APf39wD19fUA8vLyAPHx8QDv7+8A7e3tAOrq
        6gDp6ekA5+fnAOXl5QDj4+MA4ODgAN7e3gDd3d0A2traANnZ2QDX19cA1NTUANLS0gDR0dEAz8/PAMzM
        zADKysoAycnJAMbGxgDFxcUAwsLCAMDAwAC/v78Avb29ALu7uwC5ubkAt7e3ALS0tACysrIAsLCwAK6u
        rgCsrKwAq6urAKmpqQCnp6cApaWlAKKiogCgoKAAnp6eAJycnACbm5sAmZmZAJeXlwCUlJQAk5OTAJGR
        kQCPj48AjY2NAIqKigCJiYkAhoaGAIWFhQCDg4MAgICAAH9/fwB8fHwAenp6AHl5eQB3d3cAdXV1AHNz
        cwBwcHAAb29vAGxsbABqamoAaWlpAGZmZgBkZGQAY2NjAGFhYQBeXl4AXFxcAFtbWwBZWVkAV1dXAFRU
        VABTU1MAUVFRAE5OTgBMTEwASkpKAEhISABGRkYARUVFAENDQwBBQUEAPj4+AD09PQA7OzsAOTk5ADc3
        NwA0NDQAMzMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADN29i7AAAAAAAAwdrawQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAwNrVu9fa2s4AALbYFwp/qc7KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALXW1KuC
        jaCzytra2xwKCQ13d3ebws6nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAz9m1h3x+jp2cm6O6DwkLH7iw
        lX13d4m1zrUAAAAAAAAAAAAAAAAAAAAAAAAAAMfYwJF7fH5/j56dnJubDh3Iw724tK6giHl3fKLLwQAA
        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
        3wD/xbkA5ratAL+ViwD/1swAv5WKANm/uAD/5t8A2byyAPHj3gDMopIA2beoAPLUxgD/vJkA/8KfAP/K
        rAD/xaIA/8ilAP/TuQDy5t8A/8yoAOa6mwDy28oA/9CqAPnUsgD/1q0A/9ewAP/atQD/27cA/9++AP/n
        zwD/7NkA//jxAP/9+wD/5MgA//DgAP/16gBWv3kAbp5+AHCggABZr3YA////AP7+/gD7+/sA+vr6APj4
        +AD39/cA9vb2APT09ADz8/MA8vLyAPHx8QDv7+8A7u7uAO3t7QDr6+sA6urqAOjo6ADn5+cA5ubmAOXl
        5QDj4+MA4uLiAOHh4QDg4OAA39/fAN7e3gDb29sA2traANnZ2QDY2NgA19fXANbW1gDV1dUA1NTUANPT
        0wDS0tIA0dHRANDQ0ADPz88Azs7OAM3NzQDMzMwAy8vLAMrKygDIyMgAx8fHAMbGxgDFxcUAw8PDAMHB
        wQDAwMAAv7+/AL6+vgC9vb0AvLy8ALu7uwC6uroAubm5ALi4uAC3t7cAtra2ALW1tQC0tLQAs7OzALKy
        sgCxsbEAsLCwAK+vrwCurq4Ara2tAKysrACrq6sAqqqqAKmpqQCoqKgAp6enAKampgClpaUApKSkAKOj
        owCioqIAoaGhAKCgoACfn58Anp6eAJ2dnQCcnJwAm5ubAJqamgCZmZkAl5eXAJaWlgCUlJQAkpKSAJCQ
        kACPj48Ajo6OAI2NjQCMjIwAi4uLAIqKigCJiYkAiIiIAIeHhwCFhYUAhISEAIODgwCCgoIAgYGBAICA
        gAB/f38Afn5+AH19fQB8fHwAenp6AHl5eQB4eHgAd3d3AHZ2dgB1dXUAdHR0AHNzcwBxcXEAcHBwAG9v
        bwBubm4AbW1tAGtrawBnZ2cAZmZmAGVlZQBjY2MAYGBgAF9fXwBeXl4AXFxcAFpaWgBZWVkAV1dXAFVV
        VQBSUlIAUVFRAFBQUABPT08ATk5OAE1NTQBMTEwAS0tLAEpKSgBJSUkASEhIAEdHRwBFRUUAREREAEFB
        QQA9PT0APDw8ADo6OgA1NTUAMzMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACqqqoAAACqqqoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAr9razKm8vMPb08EAAAAA
        AAAAAAAAAAAAAAAAAAAAvNjYzuXk4NoUBRLH49fHAAAAAAAAAAAAAAAAAAAAAMzfolB5lsQVBQEDF0dZ
        s97dzQAAAAAAAAAAAAAAALzhslZQU3yJhhECDsO2nmpPUJPU4NCyAAAAAAAAALzbxWZNUFNWf4yJjuLV
        zMO2p5x2Vkdwvd+qAAAAAAC9z3dJTVBTVlmDj4yJqsXRzMO2p5yKdVlKxqoAAAAAnphISU1QU1ZZXI6S
        j4yJhoOgsL62p5ySqMHcqgAAAACdbElNUFNWWYW+yLmql4yJhoOAgpel1+aAu9yqAAAAAJtuTVBTXZK9
        pHeMprPEwKaShoOAfXp3mHOs2qoAAAAAnHFQWpC9o25iZoabl5WfscC/rZKAfXpFRrzZqgAAAAC0gqDE
        lGJgYmZpVV1ugZGSj5Wmv8KqjURDydiqAAAAALu8gVlcYGJma2BTXFVWV2J0hIyJi6G0ysm61qoAAAAA
        uWVZXGBiZmtoUXqAhoFrW1hZXW13g4OFmMDVqgAAAAC3WVxgYmZrbVJrdlJTV2p8h35uXltdZG93rNKq
        AAAAAKpjYGJma2xSaX5QUVJTVFVWX3KDiHttXmCtwwAAAAAAAKhiZmtmX4mfa05QUVJTVFVWV1hZYXuO
        bMsAAAAAAAAAALWioY+eiYqjq6KWfGdTVFVWV1hZhHO6AAAAAAAAAAAAAACaVlZWg46HgHqMmqecmHhc
        YIN2uAAAAAAAAAAAAAAAAJ9MS0pidHiHgHp1b2lpl46Il64AAAAAAAAAAAAAAAAAohYgHR0fIiUnVl5n
        aWeZxJAAAAAAAAAAAAAAAAAAAAAAITM3NTIvLiwrLTAqE68AAAAAAAAAAAAAAAAAAAAAAAAHNjo6Ojo6
        Ojo5ODMKAAAAAAAAAAAAAAAAAAAAAAAAABo7Ozs7Ozs7Ozs7KA8AAAAAAAAAAAAAAAAAAAAAAAAAIUBA
        QEBAQEBAQEAjtwAAAAAAAAAAAAAAAAAAAAAAACEpPDw8PDw8PDw8PBsAAAAAAAAAAAAAAAAAAAAAAAAA
        BDQ9PT09PT09PT00CAAAAAAAAAAAAAAAAAAAAAAAAAAZQUFBQUFBQUFBQSYQAAAAAAAAAAAAAAAAAAAA
        AAAAISRCQkJCQkJCQkJCHAAAAAAAAAAAAAAAAAAAAAAAAAAYPj4+Pj4+Pj4+PjELAAAAAAAAAAAAAAAA
        AAAAAAAABh4/Pz8/Pz8/Pz8/CQAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDAwMDAwMDA0AAAAAAAAAAAAA
        AAAAAAAA//HH///gA///gAD//wAAP/wAAAfwAAAD4AAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAB+AAAA/wAAAf/AAAP/wAAH/8AAH//gAH//4AD//+AA///gAP//wAH//8AB///AAf//gA
        P//4AD//8AB///AA//8oAAAAEAAAACAAAAABAAgAAAAAAEABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKaG
        hgCei4sAc2dnAFVPTwDEu7sAgXt7ALazswDOurkAemNhAObY1wD/0scA+9fOANW/uQCwoZ0Ay6uhAP/U
        xQDv3NUA38O3ANvBtQDl4d8A/9azAP/UrwD53cQA/9y4AP/lywD/7dwA//fuAHqqigBnhHEA+vr6APLy
        8gDx8fEA8PDwAO7u7gDt7e0A7OzsAOrq6gDp6ekA6OjoAOfn5wDl5eUA4eHhAODg4ADZ2dkA2NjYANXV
        1QDU1NQA0tLSAM/PzwDOzs4AzMzMAMnJyQDCwsIAwMDAAL+/vwC+vr4Avb29ALy8vAC6uroAtra2ALW1
        tQC0tLQAs7OzALKysgCxsbEArq6uAKysrACrq6sAqqqqAKampgClpaUAoKCgAJ+fnwCenp4AnZ2dAJub
        mwCXl5cAlZWVAJSUlACTk5MAkpKSAI6OjgCNjY0AjIyMAImJiQCIiIgAhoaGAIWFhQCDg4MAgoKCAICA
        gAB+fn4AfHx8AHp6egB2dnYAc3NzAHFxcQBtbW0AZGRkAGBgYABfX18AWFhYAFdXVwBVVVUAUFBQAE5O
        TgBFRUUAQ0NDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAV1dXV1dXVwAAAAAAAAAAT2RrbAQGamhgVwAAAAAAY0YgQAIBByk+Z2leAAAATCIgJ0NQZWJUOiZB
        YQAAPR4fLU5cTUBGT1JVY14AAD0tSEw0RFNbWUk3HGZdAABfRiwtLS0rMThLVR1nWgAASiotMDQuMjU2
        My8zYVcAAD0uNUVHMSEjJSw3OFYAAAAAPTQkQDtCPDk5P1cAAAAAAAAFEAsMERQoWFcAAAAAAAAADRgY
        GBUWCVcAAAAAAAAAAA8ZGRkZFwMAAAAAAAAAAAASGhoaGhNRAAAAAAAAAAAIGxsbGxsOAAAAAAAAAAAA
        CgoKCgoKCgAAAAAAAAD4D51s8ANQU+ABhb7AAaqXgAGGg4ABl6WAAYC7gAEAAIADm27AB1Nd4A+kd+Af
        s8TgP5KG4D99esB/c6zAfwAA
</value>
  </data>
</root>