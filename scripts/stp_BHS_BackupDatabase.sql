GO
USE [BHSDB_CLT];
GO

CREATE PROCEDURE dbo.stp_BHS_BackupDatabase
		  @DATABASE_NAME VARCHAR(50),
		  @BACKUP_DIRPATH VARCHAR(1000),
		  @STP_RESULT VARCHAR(50) OUT
AS
BEGIN

	DECLARE @DBBAK_FILENAME VARCHAR(100);
	DECLARE @FILEDATE VARCHAR(20);

	SELECT @FILEDATE = CONVERT(VARCHAR(20),GETDATE(),112) + '_' + REPLACE(CONVERT(VARCHAR(20),GETDATE(),108),':','');
	SET @DBBAK_FILENAME = @DATABASE_NAME + '_' + @FILEDATE + '.bak';

	SET @STP_RESULT = '';

	IF NOT EXISTS(SELECT name FROM master.sys.sysdatabases WHERE name=@DATABASE_NAME)
	BEGIN
		SET @STP_RESULT = 'Database does not exist.'
		RETURN
	END

	CREATE TABLE #PATHEXISTS
	(
		FILE_EXISTS BIT,
		IS_DIRECTORY BIT,
		PARENT_DIRECTORY_EXISTS BIT
	)

	INSERT INTO #PATHEXISTS
	EXEC master.sys.xp_fileexist @BACKUP_DIRPATH

	DECLARE @FILE_EXISTS BIT;
	DECLARE @IS_DIR BIT;

	SELECT @FILE_EXISTS=FILE_EXISTS, @IS_DIR=IS_DIRECTORY FROM #PATHEXISTS;

	IF @IS_DIR=0
	BEGIN
		SET @STP_RESULT = 'The file path for backup does not exist.'
		RETURN
	END

	DECLARE @BACKUP_FILE_FULLPATH VARCHAR(1000);
	IF SUBSTRING(@BACKUP_DIRPATH,LEN(@BACKUP_DIRPATH),1)<>'\'
	BEGIN
		SET @BACKUP_FILE_FULLPATH = @BACKUP_DIRPATH + '\';
	END

	SET @BACKUP_FILE_FULLPATH = @BACKUP_FILE_FULLPATH + @DBBAK_FILENAME

	BEGIN TRY
		BACKUP DATABASE @DATABASE_NAME
		TO DISK = @BACKUP_FILE_FULLPATH
		--WITH COMPRESSION;
	END TRY
	BEGIN CATCH
		SELECT @STP_RESULT=ERROR_MESSAGE();
	END CATCH;

	DROP TABLE #PATHEXISTS;

END

--DECLARE @DATABASE_NAME VARCHAR(50)='BHSDB_CLT'
--DECLARE @BACKUP_DIRPATH VARCHAR(1000)='D:\MS SQLSERVER\Backup';
--DECLARE @STP_RESULT VARCHAR(50)='';
--EXEC stp_BHS_BackupDatabase @DATABASE_NAME,@BACKUP_DIRPATH,@STP_RESULT OUT;
--PRINT @STP_RESULT;

